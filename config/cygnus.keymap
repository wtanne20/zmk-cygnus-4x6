#include <behaviors/rgbled_widget.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        bluetooth {
            bindings = <&mo 3>;
            key-positions = <41 36>;
        };

        bt2 {
            bindings = <&mo 3>;
            key-positions = <48 53>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 46 47>;
            tapping-term-ms = <180>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  0  | BKSP |
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | SPC | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp N1  &kp N2  &kp N3          &kp N4        &kp N5       &kp N6     &kp N7     &kp N8       &kp N9   &kp N0     &kp BSPC
&kp TAB     &kp Q   &kp W   &kp E           &kp R         &kp T        &kp Y      &kp U      &kp I        &kp O    &kp P      &kp ENTER
&kp LSHFT   &kp A   &kp S   &kp D           &kp F         &kp G        &kp H      &kp J      &kp K        &kp L    &kp SEMI   &kp SQT
&kp LCTRL   &kp Z   &kp X   &kp C           &kp V         &kp B        &kp N      &kp M      &kp COMMA    &kp DOT  &kp SLASH  &kp DEL
                            &lt 2 LEFT_GUI  &kp LEFT_ALT  &kp SPACE    &kp SPACE  &lt 1 DEL  &lt 3 ENTER
            >;
        };

        layer_1 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | BKSP |
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp KP_PLUS    &kp F1           &kp F2          &kp F3          &kp F4             &kp F5             &kp F6     &kp F7                          &kp F8                     &kp F9         &kp F10       &kp F11
&kp KP_MINUS   &kp NUMBER_1     &kp NUMBER_2    &kp NUMBER_3    &kp NUMBER_4       &kp KP_DIVIDE      &kp N6     &kp N7                          &kp N8                     &kp N9         &kp N0        &kp F12
&kp KP_DIVIDE  &kp KP_MULTIPLY  &kp LEFT_ARROW  &kp UP_ARROW    &kp RIGHT          &kp ENTER          &trans     &hmr RIGHT_SHIFT RIGHT_BRACKET  &hmr RIGHT_GUI LEFT_BRACE  &kp RIGHT_ALT  &kp UP_ARROW  &kp BSLH
&kp KP_DOT     &kp GRAVE        &kp EQUAL       &kp DOWN_ARROW  &kp K_VOLUME_DOWN  &kp K_VOLUME_UP    &kp SLASH  &kp MINUS                       &trans                     &kp LEFT       &kp DOWN      &kp PRINTSCREEN
                                                &trans          &trans             &kp BACKSPACE      &trans     &trans                          &trans
            >;
        };

        layer_2 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans                &trans                &trans                &trans                &trans             &trans     &trans     &trans     &trans    &trans    &trans
&trans  &kp LA(LC(NUMBER_1))  &kp LA(LC(NUMBER_2))  &kp LC(LA(NUMBER_3))  &kp LA(LC(NUMBER_4))  &trans             &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &trans
&trans  &kp LA(LC(N5))        &kp LA(LC(NUMBER_6))  &kp LC(LA(N7))        &kp LC(LA(N8))        &trans             &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &trans                &kp LEFT_ARROW        &kp UP_ARROW          &kp DOWN_ARROW        &kp RIGHT_ARROW    &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                                    &trans                &trans                &kp BACKSPACE      &trans     &trans     &trans
            >;
        };

        bluetooth {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans  &bt BT_CLR    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans  &bt BT_CLR    &trans  &trans  &trans  &trans  &trans  &trans
&ind_bat      &ind_con      &trans        &trans        &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans
                                          &trans        &trans  &trans        &trans  &trans  &trans
            >;
        };
    };
};
